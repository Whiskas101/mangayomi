// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `extract_tokens`, `get_log_path`, `log_cwd_to_file`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`, `fmt`

Future<String> getRustCwd() =>
    RustLib.instance.api.crateApiTokenizerWrapperGetRustCwd();

Future<List<TokenData>> tokenizeText({required String input}) =>
    RustLib.instance.api.crateApiTokenizerWrapperTokenizeText(input: input);

class TokenData {
  final String surface;
  final String dictionaryForm;
  final String normalizedForm;
  final String readingForm;
  final List<String> pos;
  final bool isOov;

  const TokenData({
    required this.surface,
    required this.dictionaryForm,
    required this.normalizedForm,
    required this.readingForm,
    required this.pos,
    required this.isOov,
  });

  @override
  int get hashCode =>
      surface.hashCode ^
      dictionaryForm.hashCode ^
      normalizedForm.hashCode ^
      readingForm.hashCode ^
      pos.hashCode ^
      isOov.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TokenData &&
          runtimeType == other.runtimeType &&
          surface == other.surface &&
          dictionaryForm == other.dictionaryForm &&
          normalizedForm == other.normalizedForm &&
          readingForm == other.readingForm &&
          pos == other.pos &&
          isOov == other.isOov;
}

enum TokenizerError { configError, dictLoadError, tokenizeError }
